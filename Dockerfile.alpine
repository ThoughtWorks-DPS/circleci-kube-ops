FROM twdps/circleci-base-image:alpine-3.8.0

LABEL maintainers=<nic.cheneweth@thoughtworks.com>

ENV KUBECTL_VERSION=1.23.5
ENV HELM_VERSION=3.9.0
ENV SONOBUOY_VERSION=0.56.6
ENV BATS_VERSION=1.7.0
ENV AWSPEC_VERSION=1.26.0
ENV INSPEC_VERSION=5.17.4
ENV ARGOCD_VERSION=2.3.4

SHELL ["/bin/ash", "-o", "pipefail", "-c"]

# sudo since twdps circleci remote docker images set the USER=cirlceci
# hadolint ignore=DL3004
RUN sudo bash -c "echo 'http://dl-cdn.alpinelinux.org/alpine/edge/main' >> /etc/apk/repositories" && \
    sudo apk add --no-cache \
             nodejs==16.15.0-r1 \
             npm==8.10.0-r0 \
             python3==3.10.4-r0 \
             ruby==3.1.2-r0 \
             ruby-webrick==1.7.0-r1 \
             ruby-bundler==2.3.14-r0 \
             jq==1.6-r1 && \
    sudo apk add --no-cache --virtual build-dependencies \
             build-base==0.5-r2 \
             ruby-dev==3.1.2-r0 \
             python3-dev==3.10.4-r0 \
             libffi-dev==3.4.2-r1 \
             g++==11.2.1_git20220219-r2 \
             gcc==11.2.1_git20220219-r2 \
             make==4.3-r0 && \
    sudo npm install -g \
             bats@$BATS_VERSION && \
    sudo gem install  --no-document \
             awspec:${AWSPEC_VERSION} \
             inspec-bin:${INSPEC_VERSION} \
             json:2.6.1 && \
    sudo python3 -m ensurepip && \
    sudo rm -r /usr/lib/python*/ensurepip && \
    sudo pip3 install --upgrade pip==22.1.2 && \
    if [ ! -e /usr/bin/pip ]; then sudo ln -s /usr/bin/pip3 /usr/bin/pip ; fi && \
    sudo ln -s /usr/bin/pydoc3 /usr/bin/pydoc && \
    sudo ln -s /usr/bin/python3 /usr/bin/python && \
    sudo ln -s /usr/bin/python3-config /usr/bin/python-config && \
    sudo pip install \
         awscli==1.25.3 && \
    curl -SLO "https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl" && \
    sudo chmod +x ./kubectl  && \
    sudo mv ./kubectl /usr/local/bin/kubectl && \
    curl -SLO "https://get.helm.sh/helm-v${HELM_VERSION}-linux-amd64.tar.gz" && \
    sudo tar -xf "helm-v${HELM_VERSION}-linux-amd64.tar.gz" && \
    sudo mv linux-amd64/helm /usr/local/bin && \
    sudo rm -rf linux-amd64/ && \
    sudo rm "helm-v${HELM_VERSION}-linux-amd64.tar.gz" && \
    curl -SLO "https://github.com/vmware-tanzu/sonobuoy/releases/download/v${SONOBUOY_VERSION}/sonobuoy_${SONOBUOY_VERSION}_linux_amd64.tar.gz" && \
    sudo tar -xf "sonobuoy_${SONOBUOY_VERSION}_linux_amd64.tar.gz" && \
    sudo mv sonobuoy /usr/local/bin/sonobuoy && \
    sudo rm "sonobuoy_${SONOBUOY_VERSION}_linux_amd64.tar.gz" && sudo rm LICENSE && \
    curl -sSL -o argocd https://github.com/argoproj/argo-cd/releases/download/v${ARGOCD_VERSION}/argocd-linux-amd64 && \
    chmod +x argocd && \
    sudo mv ./argocd /usr/local/bin/argocd && \
    sudo apk del build-dependencies

COPY inspec /etc/chef/accepted_licenses/inspec

USER circleci
