---
version: 2.1

orbs:
  executor-tools: twdps/executor-tools@1.1.0
  op: twdps/onepassword@1.0.0

parameters:
  context:
    description: circleci context for all jobs
    type: string
    default: twdps-core-labs-team
  shell-options:
    description: shell options for all jobs
    type: string
    default: op run --env-file op.env -- /bin/bash -eo pipefail
  registry:
    description: publish to this registry
    type: string
    default: ghcr.io/thoughtworks-dps

on-push-main: &on-push-main
  branches:
    only: /main/
  tags:
    ignore: /.*/

on-tag-main: &on-tag-main
  branches:
    ignore: /.*/
  tags:
    only: /.*/


workflows:
  version: 2
  alpine-image-pipeline:
    jobs:
      - executor-tools/machine-executor-dev-release:
          name: alpine-dev-build
          context: << pipeline.parameters.context >>
          registry: << pipeline.parameters.registry >>
          dockerfile: Dockerfile.alpine
          image: twdps/circleci-kube-ops
          tag: alpine-edge
          docker-cve-scan: true
          snyk-organization: twdps
          cis-docker-image-scan: true
          skip-base-image: true
          bats-test: true
          test-path: test/circleci_kube_ops_alpine.bats
          container-name: circleci-kube-ops-alpine-edge
          after-checkout:
            - op/env:
                env-file: op.env
          filters: *on-push-main

      - executor-tools/publish:
          shell: << pipeline.parameters.shell-options >>
          name: alpine-release
          context: << pipeline.parameters.context >>
          registry: << pipeline.parameters.registry >>
          executor-image-name: twdps/circleci-executor-builder:alpine-3.0.0
          pull-tag: alpine-edge
          tag-annotation: alpine-
          image: twdps/circleci-kube-ops
          release-tag: alpine-stable
          sign-image: true
          after-publish:
            - run:
                name: setup cosign keys
                command: |
                  op inject -i cosign.key.env -o cosign.key
                  op inject -i cosign.pub.env -o cosign.pub
          filters: *on-tag-main

  slim-image-pipeline:
    jobs:
      - executor-tools/machine-executor-dev-release:
          name: slim-dev-build
          context: << pipeline.parameters.context >>
          registry: << pipeline.parameters.registry >>
          dockerfile: Dockerfile.slim
          image: twdps/circleci-kube-ops
          tag: slim-edge
          docker-cve-scan: true
          severity-threshold: medium
          snyk-organization: twdps
          cis-docker-image-scan: true
          skip-base-image: true
          bats-test: true
          test-path: test/circleci_kube_ops_slim.bats
          container-name: circleci-kube-ops-slim-edge
          after-checkout:
            - op/env:
                env-file: op.env
          filters: *on-push-main

      - executor-tools/publish:
          shell:  << pipeline.parameters.shell-options >>
          name: slim-release
          context: << pipeline.parameters.context >>
          registry: << pipeline.parameters.registry >>
          pull-tag: slim-edge
          tag-annotation: slim-
          image: twdps/circleci-kube-ops
          release-tag: slim-stable
          sign-image: true
          after-publish:
            - run:
                name: setup cosign keys
                command: |
                  op inject -i cosign.key.env -o cosign.key
                  op inject -i cosign.pub.env -o cosign.pub
          filters: *on-tag-main

  generate-release-notes:
    jobs:
      - executor-tools/release:
          context: << pipeline.parameters.context >>
          shell:  << pipeline.parameters.shell-options >>
          filters: *on-tag-main
