FROM twdps/circleci-base-image:slim-3.10.0

LABEL maintainers=<nic.cheneweth@thoughtworks.com>

ENV KUBECTL_VERSION=1.24.3
ENV HELM_VERSION=3.9.3
ENV SONOBUOY_VERSION=0.56.10
ENV BATS_VERSION=1.7.0
ENV AWSPEC_VERSION=1.28.0
ENV INSPEC_VERSION=5.18.14
ENV ARGOCD_VERSION=2.4.10
ENV KIND_VERSION=0.14.0
ENV DEBIAN_FRONTEND=noninteractive

SHELL ["/bin/bash", "-exo", "pipefail", "-c"]

# sudo since twdps circleci base images set the USER=cirlceci
# hadolint ignore=DL3004
RUN sudo apt-get update && sudo apt-get install --no-install-recommends -y \
                 jq=1.6-2.1 \
                 gnupg=2.2.35-3 \
                 python3-dev=3.10.6-1 \
                 python3-pip \
                 python3-venv=3.10.6-1 \
                 ruby-full=1:3.0+1 \
                 gcc=4:12.1.0-3 \
                 g++=4:12.1.0-3 \
                 make=4.3-4.1 && \
    sudo ln -f -s /usr/bin/pip3 /usr/bin/pip && \
    sudo ln -f -s /usr/bin/pydoc3 /usr/bin/pydoc && \
    sudo ln -f -s /usr/bin/python3 /usr/bin/python && \
    sudo ln -f -s /usr/bin/python3-config /usr/bin/python-config && \
    pip install --no-cache-dir \
        datadog==0.44.0 \
        awscli==1.25.57 && \
    sudo bash -c "curl -sL https://deb.nodesource.com/setup_16.x | bash - " && \
    sudo apt-get install --no-install-recommends -y \
                 nodejs=18.7.0+dfsg-1 \
                 npm=8.17.0~ds1-1 && \
    sudo npm install -g \
             bats@$BATS_VERSION && \
    sudo gem install  --no-document \
             awspec:${AWSPEC_VERSION} \
             inspec-bin:${INSPEC_VERSION} \
             json:2.6.1 && \
    curl -Lo ./kind https://kind.sigs.k8s.io/dl/v${KIND_VERSION}/kind-linux-amd64 && \
    sudo chmod +x ./kind && \
    sudo mv ./kind /usr/local/bin/kind && \
    sudo bash -c "curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg" && \
    sudo bash -c "echo \"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian bullseye stable\" | tee /etc/apt/sources.list.d/docker.list > /dev/null" && sudo apt-get update && \
    sudo apt-get install --no-install-recommends -y \
                 docker-ce=5:20.10.17~3-0~debian-bullseye && \
    curl -SLO "https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl" && \
    sudo chmod +x ./kubectl  && \
    sudo mv ./kubectl /usr/local/bin/kubectl && \
    curl -SLO "https://get.helm.sh/helm-v${HELM_VERSION}-linux-amd64.tar.gz" && \
    sudo tar -xf "helm-v${HELM_VERSION}-linux-amd64.tar.gz" && \
    sudo mv linux-amd64/helm /usr/local/bin && \
    sudo rm -rf linux-amd64/ && \
    sudo rm "helm-v${HELM_VERSION}-linux-amd64.tar.gz" && \
    curl -SLO "https://github.com/vmware-tanzu/sonobuoy/releases/download/v${SONOBUOY_VERSION}/sonobuoy_${SONOBUOY_VERSION}_linux_amd64.tar.gz" && \
    sudo tar -xf "sonobuoy_${SONOBUOY_VERSION}_linux_amd64.tar.gz" && \
    sudo mv sonobuoy /usr/local/bin/sonobuoy && \
    sudo rm "sonobuoy_${SONOBUOY_VERSION}_linux_amd64.tar.gz" && sudo rm LICENSE && \
    curl -sSL -o argocd https://github.com/argoproj/argo-cd/releases/download/v${ARGOCD_VERSION}/argocd-linux-amd64 && \
    chmod +x argocd && \
    sudo mv ./argocd /usr/local/bin/argocd

COPY inspec /etc/chef/accepted_licenses/inspec

USER circleci
