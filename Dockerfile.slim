FROM twdps/circleci-base-image:slim-6.10.0

LABEL org.opencontainers.image.title="circleci-kube-ops" \
      org.opencontainers.image.description="Debian-based CircleCI executor image" \
      org.opencontainers.image.documentation="https://github.com/ThoughtWorks-DPS/circleci-kube-ops" \
      org.opencontainers.image.source="https://github.com/ThoughtWorks-DPS/circleci-kube-ops" \
      org.opencontainers.image.url="https://github.com/ThoughtWorks-DPS/circleci-kube-ops" \
      org.opencontainers.image.vendor="ThoughtWorks, Inc." \
      org.opencontainers.image.authors="nic.cheneweth@thoughtworks.com" \
      org.opencontainers.image.licenses="MIT" \
      org.opencontainers.image.created="CREATED" \
      org.opencontainers.image.version="VERSION"

ENV KUBECTL_VERSION=1.28.2
ENV HELM_VERSION=3.13.0
ENV AWSCLI_VERSION=1.29.62
ENV SONOBUOY_VERSION=0.56.16
ENV BATS_VERSION=1.10.0
ENV AWSPEC_VERSION=1.29.2
ENV INSPEC_VERSION=5.22.3
ENV ARGOCD_VERSION=2.8.4
ENV FLUX_VERSION=2.1.1
ENV KIND_VERSION=0.20.0
ENV CHECKOV_VERSION=2.5.6
ENV CIRCLEPIPE_VERSION=0.2.0
ENV PX_VERSION=0.8.2
ENV DEBIAN_FRONTEND=noninteractive

SHELL ["/bin/bash", "-exo", "pipefail", "-c"]

# sudo since twdps circleci base images set the USER=cirlceci
# hadolint ignore=DL3004
RUN sudo apt-get update && sudo apt-get install --no-install-recommends -y \
                 jq=1.7-1 \
                 gnupg=2.2.40-1.1 \
                 python3-dev=3.11.4-5+b1 \
                 python3-pip \
                 python3-venv=3.11.4-5+b1 \
                 ruby-full=1:3.1 \
                 gcc=4:13.2.0-1 \
                 g++=4:13.2.0-1 \
                 make=4.3-4.1 && \
    sudo ln -f -s /usr/bin/pip3 /usr/bin/pip && \
    sudo ln -f -s /usr/bin/pydoc3 /usr/bin/pydoc && \
    sudo ln -f -s /usr/bin/python3 /usr/bin/python && \
    sudo ln -f -s /usr/bin/python3-config /usr/bin/python-config && \
    sudo pip install --no-cache-dir --break-system-packages setuptools==68.2.1 && \
    sudo pip install --no-cache-dir --break-system-packages \
             checkov==${CHECKOV_VERSION} \
             awscli==${AWSCLI_VERSION} && \
    sudo mkdir -p /etc/apt/keyrings && \
    sudo bash -c "curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg" && \
    sudo bash -c "echo \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian bullseye stable\" | tee /etc/apt/sources.list.d/docker.list > /dev/null" && sudo apt-get update && \
    sudo apt-get install --no-install-recommends -y \
                 docker-ce=5:24.0.6-1~debian.11~bullseye \
                 docker-compose-plugin=2.21.0-1~debian.11~bullseye \
                 nodejs=18.13.0+dfsg1-1 \
                 npm=9.2.0~ds1-1 && \
    sudo npm install -g \
             bats@$BATS_VERSION && \
    sudo gem install  --no-document \
             awspec:${AWSPEC_VERSION} \
             inspec-bin:${INSPEC_VERSION} \
             json:2.6.1 && \
    curl -Lo ./kind https://kind.sigs.k8s.io/dl/v${KIND_VERSION}/kind-linux-amd64 && \
    sudo chmod +x ./kind && \
    sudo mv ./kind /usr/local/bin/kind && \
    curl -SLO "https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl" && \
    sudo chmod +x ./kubectl  && \
    sudo mv ./kubectl /usr/local/bin/kubectl && \
    curl -SLO "https://get.helm.sh/helm-v${HELM_VERSION}-linux-amd64.tar.gz" && \
    sudo tar -xf "helm-v${HELM_VERSION}-linux-amd64.tar.gz" && \
    sudo mv linux-amd64/helm /usr/local/bin && \
    sudo rm -rf linux-amd64/ && \
    sudo rm "helm-v${HELM_VERSION}-linux-amd64.tar.gz" && \
    curl -SLO "https://github.com/vmware-tanzu/sonobuoy/releases/download/v${SONOBUOY_VERSION}/sonobuoy_${SONOBUOY_VERSION}_linux_amd64.tar.gz" && \
    sudo tar -xf "sonobuoy_${SONOBUOY_VERSION}_linux_amd64.tar.gz" && \
    sudo mv sonobuoy /usr/local/bin/sonobuoy && \
    sudo rm "sonobuoy_${SONOBUOY_VERSION}_linux_amd64.tar.gz" && sudo rm LICENSE && \
    curl -sSL -o argocd https://github.com/argoproj/argo-cd/releases/download/v${ARGOCD_VERSION}/argocd-linux-amd64 && \
    chmod +x argocd && \
    sudo mv ./argocd /usr/local/bin/argocd && \
    curl -o px "https://storage.googleapis.com/pixie-dev-public/cli/${PX_VERSION}/cli_linux_amd64" && \
    curl -o px_checksum "https://storage.googleapis.com/pixie-dev-public/cli/${PX_VERSION}/cli_linux_amd64.sha256" && \
    cat px_checksum && sha256sum px && \
    sudo chmod +x px && \
    sudo mv px /usr/local/bin && \
    sudo rm px_checksum && \
    sudo bash -c "curl -s https://fluxcd.io/install.sh | sudo FLUX_VERSION=${FLUX_VERSION} bash" && \
    curl -SLO https://github.com/ThoughtWorks-DPS/circlepipe/releases/download/${CIRCLEPIPE_VERSION}/circlepipe_Linux_amd64.tar.gz && \
    mkdir ./circlepipe && tar -xzf circlepipe_Linux_amd64.tar.gz -C ./circlepipe && \
    sudo mv ./circlepipe/circlepipe /usr/local/bin/circlepipe && \
    sudo rm -rf ./circlepipe circlepipe_Linux_amd64.tar.gz

COPY inspec /etc/chef/accepted_licenses/inspec

USER circleci
