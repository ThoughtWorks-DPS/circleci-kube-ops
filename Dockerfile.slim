FROM twdps/circleci-base-image:slim-3.1.4

LABEL maintainers=<nic.cheneweth@thoughtworks.com>

ENV KUBECTL_VERSION=1.22.4
ENV ISTIO_VERSION=1.12.0
ENV HELM_VERSION=3.7.1
ENV SONOBUOY_VERSION=0.55.1
ENV BATS_VERSION=1.5.0
ENV DEBIAN_FRONTEND=noninteractive

SHELL ["/bin/bash", "-exo", "pipefail", "-c"]

# sudo since twdps circleci base images set the USER=cirlceci
# hadolint ignore=DL3004
RUN sudo apt-get update && sudo apt-get install --no-install-recommends -y \
                 curl=7.79.1-2  \
                 wget=1.21.2-2+b1 \
                 jq=1.6-2.1 \
                 gnupg=2.2.27-2 \
                 apt-transport-https=2.3.13 \
                 lsb-release=11.1.0 \
                 python3-dev=3.9.8-1 \
                 python3-pip \
                 python3-venv=3.9.8-1 \
                 gcc=4:11.2.0-2 \
                 g++=4:11.2.0-2 \
                 make=4.3-4.1 && \
    sudo ln -f -s /usr/bin/pip3 /usr/bin/pip && \
    sudo ln -f -s /usr/bin/pydoc3 /usr/bin/pydoc && \
    sudo ln -f -s /usr/bin/python3 /usr/bin/python && \
    sudo ln -f -s /usr/bin/python3-config /usr/bin/python-config && \
    pip install --no-cache-dir setuptools==59.5.0 && \
    pip install --no-cache-dir \
        awscli==1.22.21 && \
    sudo bash -c "curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg" && \
    sudo bash -c "echo \"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian bullseye stable\" | tee /etc/apt/sources.list.d/docker.list > /dev/null" && \
    sudo apt-get update && sudo apt-get install --no-install-recommends -y \
                 docker-ce=5:20.10.11~3-0~debian-bullseye \
                 docker-ce-cli=5:20.10.11~3-0~debian-bullseye \
                 containerd.io=1.4.12-1 && \
    sudo bash -c "curl -sL https://deb.nodesource.com/setup_14.x | bash - " && \
    sudo apt-get install --no-install-recommends -y \
                 nodejs=14.18.2-deb-1nodesource1 && \
    sudo npm install -g \
             bats@$BATS_VERSION && \
    curl -SLO "https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl" && \
    sudo chmod +x ./kubectl  && \
    sudo mv ./kubectl /usr/local/bin/kubectl && \
    curl -SLO "https://get.helm.sh/helm-v${HELM_VERSION}-linux-amd64.tar.gz" && \
    sudo tar -xf "helm-v${HELM_VERSION}-linux-amd64.tar.gz" && \
    sudo mv linux-amd64/helm /usr/local/bin && \
    sudo rm -rf linux-amd64/ && \
    sudo rm "helm-v${HELM_VERSION}-linux-amd64.tar.gz" && \
    curl -SLO "https://github.com/vmware-tanzu/sonobuoy/releases/download/v${SONOBUOY_VERSION}/sonobuoy_${SONOBUOY_VERSION}_linux_amd64.tar.gz" && \
    sudo tar -xf "sonobuoy_${SONOBUOY_VERSION}_linux_amd64.tar.gz" && \
    sudo mv sonobuoy /usr/local/bin/sonobuoy && \
    sudo rm "sonobuoy_${SONOBUOY_VERSION}_linux_amd64.tar.gz" && sudo rm LICENSE && \
    curl -L https://istio.io/downloadIstio  | ISTIO_VERSION="${ISTIO_VERSION}" sh - && \
    sudo mv "istio-${ISTIO_VERSION}/bin/istioctl" /usr/local/bin/istioctl && \
    sudo rm -rf "istio-${ISTIO_VERSION}"

USER circleci
